---
title: "P5: Mode Choice"
format: 
  html:
    theme: minty
    toc: true
    toc-location: left
editor: visual
---

The purpose of this assignment is for you to get some experience estimating and interpreting a logistic regression model. You will use data from the 2017 National Household Travel Survey to predict the likelihood that a short trip (less than 1.5 miles) for a particular trip purpose and/or by a particular population will take place by walking.

In Assignment P2, You got some experience with discrete choice models for choices with more than two options. Logistic regression is appropriate (and simpler) when you are modeling a choice that has only two options.

## Load libraries

This analysis uses the following packages:

```{r, message=FALSE, warning=FALSE}
library(tidyverse)
library(here)
library(knitr)
library(srvyr)
library(tidycensus)
library(jtools)
```

## Load dataset

This will be an analysis of trip-level data from the National Household Travel Survey. You will have already downloaded this data as part of assignment P2.

```{r}
trips <- here("data",
              "NHTS",
              "trippub.csv") |>
  read_csv(show_col_types = FALSE)
```

I'm also going to include some person-level data, so I'll load that dataset as well.

```{r}
people <- here("data",
               "NHTS",
               "perpub.csv") |>
  read_csv(show_col_types = FALSE)
```

Add vehicle data

```{r}
vehicles <- here("data",
               "NHTS",
               "vehpub.csv") |>
  read_csv(show_col_types = FALSE)
```

## Filter sample

### Filter for selected population

I am going to focus my analysis on households with children of any age.

```{r}

family_trips <- trips |>
  mutate(CHILDREN = HHSIZE - NUMADLT) |>
  filter(CHILDREN > 0, R_AGE >= 18)
```

### Filter for trip distance

I want to identify trip that could conceivably be considered to be withing walking distance, which I'll define as being less than a mile and a half.

```{r}

short_family_trips <- family_trips |>
  filter(TRPMILAD < 1.5)

nrow(short_family_trips)
```

This leaves me with a sample of 5,206 trips.

## Generate outcome variable

I want to predict the likelihood that a given trip will take place by walking (TRPTRANS is 01). I'll create a true/false variable for whether each trip is a walk trip.

```{r}

short_family_trips <- short_family_trips |>
  mutate(walk = TRPTRANS == "01")
```

And I can do a quick check to see what share of the trips in my sample are walk trips.

```{r, message=FALSE}

short_family_trips |>
  mutate(Mode = factor(ifelse(walk, "Walk", "Other mode"),
                       levels = c("Walk", "Other mode"))) |>
  group_by(Mode) |>
  summarise(`Number of trips` = n()) |>
  mutate(`Percent of trips` = 
           paste0(round(100*`Number of trips`/sum(`Number of trips`)), "%")) |>
  kable()
```

I can also incorporate survey weights to estimate what share of the full population of trips short trips to visit friends and relatives by older adults take place by walking.

```{r, message=FALSE}

short_family_trips |>
  as_survey_design(weights = WTTRDFIN) |>
  mutate(Mode = factor(ifelse(walk, "Walk", "Other mode"),
                       levels = c("Walk", "Other mode"))) |>
  group_by(Mode) |>
  survey_tally(vartype = "ci") |>
  mutate(`Estimated percent of trips` = 
           paste0(round(100*n/sum(n)),"%"),
         `Lower estimate (95% confidence)` = 
           paste0(round(100*n_low/sum(n)),"%"),
         `Upper estimate (95% confidence)` = 
           paste0(round(100*n_upp/sum(n)),"%")) |>
  select(Mode,
         `Estimated percent of trips`,
         `Lower estimate (95% confidence)`,
         `Upper estimate (95% confidence)`) |>
  kable()
```

So it looks like about a third of all trips under a mile and a half that seniors make to visit friends and relatives are walk trips.

## Choose predictor variables

I'm going to predict the likelihood of a trip taking place by walking based on the following predictors:

-   Distance (TRPMILES)

-   Number of children (CHILDREN)

-   Urban area classification (URBAN)

-   Gender (R_SEX)

-   Household income (HHFAMINC)

-   Number of workers (WORKER)

Most of these are already available in the dataset, and I just need to filter out the missing values. I will need to construct a value for income.

### Distance

Let's look at the distribution of trip distances.

```{r}

sample_trips <- short_family_trips |>
  filter(TRPMILES >=0)

trip_distance <- ggplot(sample_trips) +
  geom_histogram(aes(x = TRPMILES),
                 color = "gray",
                 fill = "cornsilk",
                 binwidth = 0.1) +
  scale_x_continuous(name = "Trip distance (miles)",
                     breaks = seq(0, 1.5, by=0.1)) +
  scale_y_continuous(name = "Number of trips in sample") +
  theme_minimal()

ggsave("trip distance.png",
       plot = trip_distance,
       width = 7,
       height = 5,
       dpi = 300)
```

### Number of children

```{r}

number_of_children <- ggplot(sample_trips) +
  geom_histogram(aes(x = CHILDREN),
                 color = "lightblue4",
                 fill = "lightblue",
                 binwidth = 1) +
  scale_x_continuous(name = "Number of Children",
                     breaks = 0:8) +
  scale_y_continuous(name = "Number of trips in sample") +
  theme_minimal()

ggsave("number of children.png",
       plot = number_of_children,
       width = 7,
       height = 5,
       dpi = 300)
```

### Level of urbanization

```{r, message=FALSE}

ggplot(sample_trips) +
  geom_bar(aes(x = factor(URBAN)),
           color = "gray",
           fill = "cornsilk") +
  scale_x_discrete(name = "Urban Classification",
                   labels = c("01" = "Urban area",
                              "02" = "Urban cluster",
                              "03" = "Surrounded by urban areas",
                              "04" = "Not in urban area")) +
  scale_y_continuous(name = "Number of trips in sample") +
  theme_minimal()

```

A majority of short walking trips were made in an urban area.

### Gender

Let's look at the gender values in our sample data.

```{r}

sample_trips |>
  group_by(R_SEX) |>
  summarise(`Number of trips` = n())
```

Once again, negative values represent missing data. We'll recode the variable as a true/false indicator for whether the trip is by a woman.

```{r}

sample_trips <- sample_trips |>
  filter(R_SEX != "-7") |>
  mutate(female = R_SEX == "02")
```

### Income

The HHFAMINC variable reports income in categories. We can recode these as a continuous variable. One approach is to use the midpoint of each category. There is no midpoint for the highest income category (greater than \$200,000), so you'd need to choose an arbitrary value for that top category.

You could also use census microdata to find the median household income for families in each of those income categories, including the top category. You can use the `get_pums` function in the `tidycensus` package to get microdata.

```{r, message=FALSE, results='hide'}

states_in_sample <- unique(trips$HHSTATE)

all_pums <- get_pums(variables = c("FINCP", "AGEP"),
                     state = states_in_sample,
                     survey = "acs1",
                     year = 2018,
                     recode = TRUE)

```

And now we can filter to only individuals with children and find the median income within each income category.

```{r}

sr_pums <- all_pums |>
  filter(AGEP > 65) |>
  filter(FINCP >= 0) |>
  mutate(inc_cat = case_when(FINCP < 10000 ~ "01",
                             FINCP < 15000 ~ "02",
                             FINCP < 25000 ~ "03",
                             FINCP < 35000 ~ "04",
                             FINCP < 50000 ~ "05",
                             FINCP < 75000 ~ "06",
                             FINCP < 100000 ~ "07",
                             FINCP < 125000 ~ "08",
                             FINCP < 150000 ~ "09",
                             FINCP < 200000 ~ "10",
                             TRUE ~ "11"))

pums_summary <- sr_pums |>
  group_by(inc_cat) |>
  summarise(`Median income` = median(FINCP))

pums_summary|>
  kable(format.args = list(big.mark = ","))
```

And we can recode our income categories with those median values.

```{r}
sample_trips <- sample_trips |>
  mutate(HHFAMINC = as.numeric(HHFAMINC)) |>
  filter(HHFAMINC > 0) |>
  mutate(income = pums_summary$`Median income`[HHFAMINC])

household_income <- ggplot(sample_trips) +
  geom_histogram(aes(x = income),
                 bins = 20,
                 color = "lightblue4",
                 fill = "lightblue") +
  scale_x_continuous(transform = "log",
                     breaks = breaks <- 5000*2^seq(0, 6, by=1),
                     labels = paste0("$", formatC(breaks, 
                                                  format = "d",
                                                  big.mark = ",")),
                     name = "Annual household income") +
  scale_y_continuous(name = "Number of trips in sample") +
  theme_minimal()

ggsave("household income.png",
       plot = household_income,
       width = 7,
       height = 5,
       dpi = 300)
```

### Number of workers

```{r}

sample_trips <- sample_trips |>
  mutate(workers = WRKCOUNT)

```

### Final sample size

```{r}
nrow(sample_trips)
```

After removing trips with missing values, we have a final sample size of 4,942 trips.

## Estimate model

Now I can estimate a logistic regression model predicting the likelihood that a trip will take place by walking. A logistic regression is similar to a linear regression model, but instead of predicting the value of a continuous variable, it predicts the log (natural logarithm) of the odds of something occurring, where the odds are the ratio of the probability that it will happen to the probability that it won't happen. For example, the odds of walking would be:

$$
odds_{walk} = \frac{p_{walk}}{1 - p_{walk}}
$$

```{r}

model <- glm(walk ~ 
               TRPMILES +
               CHILDREN +
               URBAN +
               female +
               income +
               workers,
             data = sample_trips,
             family = "binomial")

coeff_labels <- c("Intercept" = "(Intercept)",
                  "Trip distance (miles)" = "TRPMILES",
                  "Number of children" = "CHILDREN",
                  "Level of urbanization (Urban Cluster)" = "URBAN02",
                  "Level of urbanization (Urban Surrounded Area)" = "URBAN03",
                  "Level of urbanization (Not Urban)" = "URBAN04",
                  "Female" = "femaleTRUE",
                  "Annual household income" = "income",
                  "Number of workers" = "workers")

export_summs(model, 
             robust = "HC3", 
             coefs = coeff_labels,
             error_format = "(p = {p.value})",
             error_pos = "right")
```

As a note, you can export that model summary to a Microsoft Word document. It might not be formatted exactly how you would like, but it could save you some typing.

```{r, eval=FALSE}

export_summs(model, 
             robust = "HC3", 
             coefs = coeff_labels,
             error_format = "(p = {p.value})",
             error_pos = "same",
             to.file = "Word",
             file.name = here("P5",
                              "model-result.docx"))
```

It looks like the model supports the following conclusions:

-   People are less likely to walk for longer trips

-   People with more children in their household are less likely to walk

-   People in less urbanized areas are less likely to walk

-   Women are less likely to walk

-   Higher income people are more likely to walk

-   People who are workers are less likely to walk

Interpreting these coefficients directly (beyond just their direction and significance) is not terribly intuitive, but we can visualize some predicted probabilities.

Here is a plot of the predicted probabilities of walking across the range of trip distances in the model, holding all other predictors at their average (for continuous predictors) or reference (for categorical predictors) values.

```{r}

predicted_plots <- effect_plot(model, pred = "TRPMILES", interval = TRUE) +
  scale_x_continuous(name = "Trip distance (miles)",
                     breaks = seq(0, 1.5, by  =0.1)) +
  scale_y_continuous(name = "Probabilitity of walking",
                     breaks = breaks <- seq(0, 0.8, by = 0.1),
                     labels = paste0(breaks*100, "%"))

ggsave("predicted_walk_prob_by_distance.png",
       plot = predicted_plots,
       width = 7,
       height = 5,
       dpi = 300)
```

The `effect_plot` function also works for categorical predictors.

```{r}
unique(sample_trips$URBAN)


effect_plot(model = model, 
            pred = "URBAN", 
            interval = TRUE) +
  scale_y_continuous(name = "Probability of walking for a particular trip",
                     breaks = seq(0, 1, by = 1),
                     labels = paste0(seq(0, 1, by = 1) * 100, "%")) +
  scale_x_discrete(name = "Level of urbanization",
                   labels = c("Urban Area", 
                              "Urban Cluster", 
                              "Surrounded by Urban Area",
                              "Not Urban"))
  
```
